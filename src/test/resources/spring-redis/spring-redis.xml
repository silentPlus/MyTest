<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 定义加载资源文件 -->
	<context:property-placeholder location="classpath:spring-redis/redis.properties" ignore-unresolvable="true" /> 
		
	<!-- 配置redies的客户端 -->  
	<bean id="jedisPoolConfig"  class="redis.clients.jedis.JedisPoolConfig" >  
        <!-- <property name="maxTotal" value="${redis.maxTotal}" />  --> 
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
        <!-- <property name="maxWait" value="${redis.maxWait}" /> -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
    </bean>  
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
	    <property name="hostName" value="${redis.ip}" />  
	    <property name="port" value="${redis.port}" />  
	    <property name="poolConfig" ref="jedisPoolConfig" />  
	    <property name="database" value="1"/>
	    <property name="password" value="${redis.pass}" />
    </bean>
    
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" scope="prototype">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"  
        p:connection-factory-ref="jedisConnectionFactory">  
        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->  
        <property name="keySerializer">  
            <bean  
                class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="hashKeySerializer">  
            <bean  
                class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer">  
            <bean  
                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property>  
        <property name="hashValueSerializer">  
            <bean  
                class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property>  
  
    </bean>  
    <!-- 对string操作的封装 -->  
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"  
        p:connection-factory-ref="jedisConnectionFactory" />  
<!--         <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref="redisTemplate"/> -->  
	
	
</beans>